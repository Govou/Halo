deploy halobiz go


- stage: BuildAndDeployHalobizBackendMicroserviceStaging
  displayName: Build and Deploy Halobiz Microservice to Stg
  condition: eq(variables.isStg, true)

  jobs:
    - job: halobiz_backend_microservice_file_change_stg
      displayName: Check_halobiz_backend_microservice_for_file_change
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: CmdLine@2
        displayName: 'Check halobiz_backend microservice build'
        inputs:
          script: |
            chmod +x Scripts/halobiz-backend-script.sh
            ./Scripts/halobiz-backend-script.sh
        name: halobiz_backend_microservice_file_change_stg

    - job: Build_and_deploy_Halobiz_backend_Microservice
      displayName: 'Build and deploy Halobiz-Backend Microservice'
      dependsOn:  halobiz_backend_microservice_file_change
      condition: eq(dependencies.halobiz_backend_microservice_file_change_stg.outputs['halobiz_backend_microservice_file_change_stg.SOURCE_CODE_CHANGED'], 'true')
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: DownloadSecureFile@1
        name: StgEnv
        displayName: 'Download Halobiz-backend appsettings.json to Stg environment'
        inputs:
          secureFile: 'appsettings-halobiz-backend-staging.json'

      - task: CmdLine@2
        displayName: 'Copy Halobiz-backend appsettings.json env to default directory'
        inputs:
          script: |
            cp $(StgEnv.secureFilePath) '$(System.DefaultWorkingDirectory)/HaloBiz/'
            mv '$(System.DefaultWorkingDirectory)/HaloBiz/appsettings-halobiz-backend-staging.json  '$(System.DefaultWorkingDirectory)/HaloBiz/appsettings.json

      - task: DownloadSecureFile@1
        name: DockerStaging
        displayName: 'Copy Docker development file to system default directory'
        inputs:
          secureFile: 'Dockerfile.staging'

      - task: CmdLine@2
        displayName: 'Copy Dockerfile.staging to system directory'
        inputs:
          script: |
            cp $(DockerStaging.secureFilePath) '$(System.DefaultWorkingDirectory)/'

      - task: Docker@2
        inputs:
          containerRegistry: 'Halobiz-Registry'
          repository: 'halobiz-backend-staging'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile.staging'
          tags: $(tag)

      - task: AzureWebAppContainer@1
        displayName: 'Halobiz-backend Staging deployment to Azure Container'
        inputs:
          azureSubscription: 'Halogen-IT(d041e96e-4105-4b10-81d2-7b8bcbf6c52b)'
          appName: 'stg-halobiz-backend'
          deployToSlotOrASE: true
          resourceGroupName: 'Halogen-Stg-Application'
          slotName: 'production'
          containers: 'halobiz.azurecr.io/halobiz-backend-staging:$(tag)'


- stage: BuildAndDeployHalobizIdentityServerMicroserviceStaging
  displayName: Build and deploy Online Halobiz Identity-server Microservice to Stg
  condition: eq(variables.isStg, true)

  jobs:
    - job: halobiz_identity_server_microservice_file_change_stg
      displayName: Check_halobiz_identity_server_microservice_for_file_change
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: CmdLine@2
        displayName: 'Check halobiz_identity_server microservice build on staging'
        inputs:
          script: |
            chmod +x Scripts/halobiz-identity-server-script.sh
            ./Scripts/halobiz-identity-server-script.sh
        name: halobiz_identity_server_microservice_file_change_stg

    - job: Build_and_deploy_halobiz_identity_server_MicroserviceStaging
      displayName: 'Build and deploy halobiz_identity_server Microservice to staging'
      dependsOn:  halobiz_identity_server_microservice_file_change_stg
      condition: eq(dependencies.halobiz_identity_server_microservice_file_change_stg.outputs['halobiz_identity_server_microservice_file_change_stg.SOURCE_CODE_CHANGED'], 'true')
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: DownloadSecureFile@1
        name: DevEnv
        displayName: 'Download halobiz_identity_server appsettings.json to Stg environment'
        inputs:
          secureFile: 'appsettings-identity-server-staging.json'

      - task: CmdLine@2
        displayName: 'Copy halobiz_identity_server appsettings-staging.json env to default directory'
        inputs:
          script: |
            cp $(DevEnv.secureFilePath) '$(System.DefaultWorkingDirectory)/HalobizIdentityServer/'
            mv $(System.DefaultWorkingDirectory)/HalobizIdentityServer/appsettings-identity-server-staging.json  $(System.DefaultWorkingDirectory)/HalobizIdentityServer/appsettings.json

      - task: DownloadSecureFile@1
        name: DockerStaging
        displayName: 'Copy Docker staging file to halobiz_identity_server directory'
        inputs:
          secureFile: 'Dockerfile-identity-server-staging'

      - task: CmdLine@2
        displayName: 'Copy Dockerfile.staging to system directory'
        inputs:
          script: |
            cp $(DockerStaging.secureFilePath) '$(System.DefaultWorkingDirectory)/'

      - task: Docker@2
        inputs:
          containerRegistry: 'Halobiz-Registry'
          repository: 'halobiz-identity-staging'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile-identity-server-staging'
          tags: $(tag)

      - task: AzureWebAppContainer@1
        displayName: 'Deploy halobiz-identity staging to Azure Container'
        inputs:
          azureSubscription: 'Halogen-IT(d041e96e-4105-4b10-81d2-7b8bcbf6c52b)'
          appName: 'stg-identity-server'
          deployToSlotOrASE: true
          resourceGroupName: 'Halogen-Stg-Application'
          slotName: 'production'
          containers: 'halobiz.azurecr.io/halobiz-identity-staging:$(tag)'


- stage: BuildAndDeployOnlinePortalBackendMicroserviceStaging
  displayName: Build and deploy Online Portal backend Microservice to Stg
  condition: eq(variables.isStg, true)

  jobs:
    - job: online_portal_microservice_file_change_stg
      displayName: Check_online_portal_microservice_for_file_change
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: CmdLine@2
        displayName: 'Check online_portal microservice build'
        inputs:
          script: |
            chmod +x Scripts/online-portal-script.sh
            ./Scripts/online-portal-script.sh
        name: online_portal_microservice_file_change_stg

    - job: Build_and_deploy_online_portal_Microservice
      displayName: 'Build and deploy online_portal Microservice'
      dependsOn:  online_portal_microservice_file_change_stg
      condition: eq(dependencies.online_portal_microservice_file_change_stg.outputs['online_portal_microservice_file_change_stg.SOURCE_CODE_CHANGED'], 'true')
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: DownloadSecureFile@1
        name: StgEnv
        displayName: 'Download online_portal appsettings.json to Dev environment'
        inputs:
          secureFile: 'appsettings-identity-server-staging.json'

      - task: CmdLine@2
        displayName: 'Copy online_portal appsettings.json env to default directory'
        inputs:
          script: |
            cp $(StgEnv.secureFilePath) '$(System.DefaultWorkingDirectory)/OnlinePortalBackend/'
            mv $(System.DefaultWorkingDirectory)/OnlinePortalBackend/appsettings-identity-server-staging.json  $(System.DefaultWorkingDirectory)/OnlinePortalBackend/appsettings.json

      - task: DownloadSecureFile@1
        name: DockerStaging
        displayName: 'Copy Docker staging file to online_portal directory'
        inputs:
          secureFile: 'Dockerfile-online-backend-staging'

      - task: CmdLine@2
        displayName: 'Copy Dockerfile.staging to system directory'
        inputs:
          script: |
            cp $(DockerStaging.secureFilePath) '$(System.DefaultWorkingDirectory)/'

      - task: Docker@2
        inputs:
          containerRegistry: 'Halobiz-Registry'
          repository: 'online-portal-backend-staging'
          command: 'buildAndPush'
          Dockerfile: '**/Dockerfile-online-backend-staging'
          tags: $(tag)

      - task: AzureWebAppContainer@1
        displayName: 'Deploy online-portal-backend staging to Azure Container'
        inputs:
          azureSubscription: 'Halogen-IT(d041e96e-4105-4b10-81d2-7b8bcbf6c52b)'
          appName: 'stg-online-backend'
          deployToSlotOrASE: true
          resourceGroupName: 'Halogen-Stg-Application'
          slotName: 'production'
          containers: 'halobiz.azurecr.io/online-portal-backend-staging:$(tag)'









