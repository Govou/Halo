trigger:
  branches:
    include:
      - develop
      - staging
      - production
      - Ci-dev/ft


pr:
  - develop
  - staging
  - production

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  isDev: $[eq(variables['Build.SourceBranchName'], 'develop')]
  isStg: $[eq(variables['Build.SourceBranchName'], 'staging')]
  isProd: $[eq(variables['Build.SourceBranchName'], 'production')]
  vmImageName: 'ubuntu-18.04'
  BuildConfiguration: 'Release'
  HaloBiz: '$(System.DefaultWorkingDirectory)HaloBiz/HaloBiz.csproj'
  IdentityServer: '$(System.DefaultWorkingDirectory)HalobizIdentityServer/HalobizIdentityServer.csproj'
  OnlinePortal: '$(System.DefaultWorkingDirectory)OnlinePortalBackend/OnlinePortalBackend.csproj'


stages:

- stage: BuildAndDeployHalobizBackendMicroservice
  displayName: Build and Deploy Halobiz Microservice to Dev
  condition: eq(variables.isDev, true)

  jobs:
    - job: halobiz_backend_microservice_file_change
      displayName: Check_halobiz_backend_microservice_for_file_change
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: CmdLine@2
        displayName: 'Check halobiz_backend microservice build'
        inputs:
          script: |
            chmod +x Scripts/halobiz-backend-script.sh
            ./Scripts/halobiz-backend-script.sh
        name: halobiz_backend_microservice_file_change

    - job: Build_and_deploy_Halobiz_backend_Microservice
      displayName: 'Build and deploy Halobiz-Backend Microservice'
      dependsOn:  halobiz_backend_microservice_file_change
      condition: eq(dependencies.halobiz_backend_microservice_file_change.outputs['halobiz_backend_microservice_file_change.SOURCE_CODE_CHANGED'], 'true')
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: DownloadSecureFile@1
        name: DevEnv
        displayName: 'Download Halobiz-backend appsettings.json to Dev environment'
        inputs:
          secureFile: 'appsettings.json'

      - task: CmdLine@2
        displayName: 'Copy Halobiz-backend appsettings.json env to default directory'
        inputs:
          script: |
            cp $(DevEnv.secureFilePath) '$(System.DefaultWorkingDirectory)/HaloBiz/'

      - task: DownloadSecureFile@1
        name: DockerDevelopment
        displayName: 'Copy Docker development file to system default directory'
        inputs:
          secureFile: 'Dockerfile.development'

      - task: CmdLine@2
        displayName: 'Copy Dockerfile.Development to system directory'
        inputs:
          script: |
            cp $(DockerDevelopment.secureFilePath) '$(System.DefaultWorkingDirectory)/HaloBiz/'

      - task: Docker@2
        inputs:
          containerRegistry: 'Halobiz-Registry'
          repository: 'halobiz-backend'
          command: 'buildAndPush'
          Dockerfile: '**/HaloBiz/Dockerfile.development'
          tags: $(tag)

      - task: AzureWebAppContainer@1
        displayName: 'Halobiz-backend deployment to Azure Container'
        inputs:
          azureSubscription: 'Halogen-IT(d041e96e-4105-4b10-81d2-7b8bcbf6c52b)'
          appName: 'dev-halobiz-backend'
          deployToSlotOrASE: true
          resourceGroupName: 'Halogen-Dev-Application'
          slotName: 'production'
          containers: 'halobiz.azurecr.io/halobiz-backend:$(tag)'


- stage: BuildAndDeployOnlinePortalBackendMicroservice
  displayName: Build and deploy Online Portal backend Microservice to Dev
  condition: eq(variables.isDev, true)

  jobs:
    - job: online_portal_microservice_file_change
      displayName: Check_online_portal_microservice_for_file_change
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: CmdLine@2
        displayName: 'Check online_portal microservice build'
        inputs:
          script: |
            chmod +x Scripts/online-portal-script.sh
            ./Scripts/online-portal-script.sh
        name: online_portal_microservice_file_change

    - job: Build_and_deploy_online_portal_Microservice
      displayName: 'Build and deploy online_portal Microservice'
      dependsOn:  online_portal_microservice_file_change
      condition: eq(dependencies.online_portal_microservice_file_change.outputs['online_portal_microservice_file_change.SOURCE_CODE_CHANGED'], 'true')
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: DownloadSecureFile@1
        name: DevEnv
        displayName: 'Download online_portal appsettings.json to Dev environment'
        inputs:
          secureFile: 'appsettings-online-backend.json'

      - task: CmdLine@2
        displayName: 'Copy online_portal appsettings.json env to default directory'
        inputs:
          script: |
            cp $(DevEnv.secureFilePath) '$(System.DefaultWorkingDirectory)/OnlinePortalBackend/'
            mv $(System.DefaultWorkingDirectory)/OnlinePortalBackend/appsettings-online-backend.json  $(System.DefaultWorkingDirectory)/OnlinePortalBackend/appsettings.json

      - task: DownloadSecureFile@1
        name: DockerDevelopment
        displayName: 'Copy Docker development file to online_portal directory'
        inputs:
          secureFile: 'Dockerfile.development'

      - task: CmdLine@2
        displayName: 'Copy Dockerfile.Development to system directory'
        inputs:
          script: |
            cp $(DockerDevelopment.secureFilePath) '$(System.DefaultWorkingDirectory)/OnlinePortalBackend/'

      - task: Docker@2
        inputs:
          containerRegistry: 'Halobiz-Registry'
          repository: 'online-portal-backend'
          command: 'buildAndPush'
          Dockerfile: '**/OnlinePortalBackend/Dockerfile-online-backend-development'
          tags: $(tag)

      - task: AzureWebAppContainer@1
        displayName: 'Deploy online-portal-backend to Azure Container'
        inputs:
          azureSubscription: 'Halogen-IT(d041e96e-4105-4b10-81d2-7b8bcbf6c52b)'
          appName: 'dev-online-backend'
          deployToSlotOrASE: true
          resourceGroupName: 'Halogen-Dev-Application'
          slotName: 'production'
          containers: 'halobiz.azurecr.io/online-portal-backend:$(tag)'



- stage: BuildAndDeployHalobizIdentityServerMicroservice
  displayName: Build and deploy Online Halobiz Identity-server Microservice to Dev
  condition: eq(variables.isDev, true)

  jobs:
    - job: halobiz_identity_server_microservice_file_change
      displayName: Check_halobiz_identity_server_microservice_for_file_change
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: CmdLine@2
        displayName: 'Check halobiz_identity_server microservice build'
        inputs:
          script: |
            chmod +x Scripts/halobiz-identity-server-script.sh
            ./Scripts/halobiz-identity-server-script.sh
        name: halobiz_identity_server_microservice_file_change

    - job: Build_and_deploy_halobiz_identity_server_Microservice
      displayName: 'Build and deploy halobiz_identity_server Microservice'
      dependsOn:  halobiz_identity_server_microservice_file_change
      condition: eq(dependencies.halobiz_identity_server_microservice_file_change.outputs['halobiz_identity_server_microservice_file_change.SOURCE_CODE_CHANGED'], 'true')
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: DownloadSecureFile@1
        name: DevEnv
        displayName: 'Download halobiz_identity_server appsettings.json to Dev environment'
        inputs:
          secureFile: 'appsettings-identity-server.json'

      - task: CmdLine@2
        displayName: 'Copy halobiz_identity_server appsettings.json env to default directory'
        inputs:
          script: |
            cp $(DevEnv.secureFilePath) '$(System.DefaultWorkingDirectory)/HalobizIdentityServer/'
            mv $(System.DefaultWorkingDirectory)/HalobizIdentityServer/appsettings-identity-server.json  $(System.DefaultWorkingDirectory)/HalobizIdentityServer/appsettings.json

      - task: DownloadSecureFile@1
        name: DockerDevelopment
        displayName: 'Copy Docker development file to halobiz_identity_server directory'
        inputs:
          secureFile: 'Dockerfile.development'

      - task: CmdLine@2
        displayName: 'Copy Dockerfile.Development to system directory'
        inputs:
          script: |
            cp $(DockerDevelopment.secureFilePath) '$(System.DefaultWorkingDirectory)/HalobizIdentityServer/'

      - task: Docker@2
        inputs:
          containerRegistry: 'Halobiz-Registry'
          repository: 'halobiz-identity'
          command: 'buildAndPush'
          Dockerfile: '**/HalobizIdentityServer/Dockerfile-identity-server-development'
          tags: $(tag)

      - task: AzureWebAppContainer@1
        displayName: 'Deploy halobiz-identity to Azure Container'
        inputs:
          azureSubscription: 'Halogen-IT(d041e96e-4105-4b10-81d2-7b8bcbf6c52b)'
          appName: 'dev-halobiz-identity'
          deployToSlotOrASE: true
          resourceGroupName: 'Halogen-Dev-Application'
          slotName: 'production'
          containers: 'halobiz.azurecr.io/halobiz-identity:$(tag)'












